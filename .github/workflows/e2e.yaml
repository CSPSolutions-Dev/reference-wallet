name: E2E Test

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check kill switch
        id: check_ks
        run: |
          if ${{ secrets.KILL_SWITCH_E2E_TEST }}; then
            echo "::set-output name=should_run::false";
          else
            echo "::set-output name=should_run::true";
          fi;
      - name: Install pipenv
        run: |
          pip install --upgrade pipenv
      - name: Setup env
        run: |
          ./scripts/lrw.sh setup_environment true
      - name: Build docker images
        run: |
          ./scripts/lrw.sh build 8080 e2e-blind
      - name: Spin up single wallet instance
        if: steps.check_ks.outputs.should_run == 'true'
        run: |
          ./scripts/lrw.sh e2e single up | tail -2 > e2e.vars
      - name: Wait for services to boot up
        if: steps.check_ks.outputs.should_run == 'true'
        continue-on-error: true
        run: |
          cat e2e.vars
          IFS=''
          for attempt in {1..60} ; do
            unreachable=$(docker ps -a | awk '{ print $1 }' | awk 'NR>1' | xargs -L1 -I {} sh -c "docker logs {} 2>&1 | tail -1" | grep unreachable || true)
            if [ -z "$unreachable" ]; then
              echo "All services reachable"
              exit 0
            fi
            echo "Attempt $attempt, some services still unreachable"
            sleep 3
          done
          echo "Services unhealthy"
          exit 1
      - name: Sleep and list docker containers
        if: steps.check_ks.outputs.should_run == 'true'
        run: |
          sleep 10
          docker container ls -a
      - name: Run single-wallet tests on test-runner
        if: steps.check_ks.outputs.should_run == 'true'
        continue-on-error: true
        run: |
          echo "Fetching vars from wallet setup"
          source e2e.vars
          ./scripts/test_e2e.sh single
      - name: Dump container logs
        if: steps.check_ks.outputs.should_run == 'true'
        continue-on-error: true
        run: |
          IFS=''
          containers=$(docker ps -a | awk '{ print $1, $NF }' | awk 'NR>1')
          echo $containers
          echo $containers | while read line; do
              echo
              echo $line | awk '{ print "============", $2, "============" }'
              echo $line | awk '{ print $1 }' | xargs -L1 docker logs
          done
      - name: Spin up second wallet instance
        if: steps.check_ks.outputs.should_run == 'true'
        continue-on-error: true
        run: |
          ./scripts/lrw.sh e2e double up true | tail -2 >> e2e.vars
      - name: Wait for services to boot up
        if: steps.check_ks.outputs.should_run == 'true'
        continue-on-error: true
        run: |
          cat e2e.vars
          IFS=''
          for attempt in {1..60} ; do
            unreachable=$(docker ps -a | awk '{ print $1 }' | awk 'NR>1' | xargs -L1 -I {} sh -c "docker logs {} 2>&1 | tail -1" | grep unreachable || true)
            if [ -z "$unreachable" ]; then
              echo "All services reachable"
              exit 0
            fi
            echo "Attempt $attempt, some services still unreachable"
            sleep 3
          done
          echo "Services unhealthy"
          exit 1
      - name: Sleep and list docker containers
        if: steps.check_ks.outputs.should_run == 'true'
        run: |
          sleep 30
          docker container ls -a
      - name: Run double-wallet tests on test-runner
        if: steps.check_ks.outputs.should_run == 'true'
        continue-on-error: true
        run: |
          echo "Fetching vars from wallet setup"
          source e2e.vars
          ./scripts/test_e2e.sh double
      - name: Dump container logs
        if: steps.check_ks.outputs.should_run == 'true'
        continue-on-error: true
        run: |
          IFS=''
          containers=$(docker ps -a | awk '{ print $1, $NF }' | awk 'NR>1')
          echo $containers
          echo $containers | while read line; do
              echo
              echo $line | awk '{ print "============", $2, "============" }'
              echo $line | awk '{ print $1 }' | xargs -L1 docker logs
          done